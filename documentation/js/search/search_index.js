var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.173,1,2.138]],["body/controllers/AppController.html",[0,1.842,1,3.357,2,1.455,3,0.343,4,0.298,5,0.298,6,3.401,7,0.599,8,1.584,9,4.967,10,1.571,11,0.029,12,0.849,13,4.053,14,1.251,15,1.989,16,0.557,17,0.718,18,3.033,19,3.401,20,0.343,21,0.017,22,1.841,23,3.401,24,1.349,25,4.053,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,1.008,29,2.138]],["body/modules/AppModule.html",[1,3.048,2,1.434,3,0.237,4,0.205,5,0.205,11,0.029,16,0.66,17,0.495,18,3.012,19,2.345,20,0.237,21,0.012,26,0.018,27,0.018,28,1.438,29,4.182,30,1.171,31,1.171,32,1.379,33,1.379,34,1.171,35,2.3,36,1.379,37,2.345,38,2.345,39,2.345,40,3.306,41,3.306,42,2.54,43,3.306,44,3.306,45,1.971,46,1.379,47,1.379,48,2.794,49,2.613,50,2.794,51,2.794,52,2.794,53,2.794,54,2.794,55,2.794,56,2.345,57,2.345,58,2.345,59,2.794,60,2.794,61,2.794,62,2.794,63,2.794,64,2.794]],["title/injectables/AppService.html",[18,1.76,65,0.802]],["body/injectables/AppService.html",[3,0.362,4,0.314,5,0.314,7,0.632,8,1.638,9,5.064,11,0.029,12,0.896,14,1.32,15,2.057,16,0.464,17,0.758,18,2.858,20,0.362,21,0.018,24,1.423,26,0.023,27,0.023,65,1.303,66,1.942,67,3.588,68,4.276,69,4.276,70,4.276]],["title/controllers/AuthController.html",[0,1.173,71,2.138]],["body/controllers/AuthController.html",[0,0.823,2,0.823,3,0.194,4,0.169,5,0.365,7,0.339,8,1.066,10,1.792,11,0.029,12,0.968,14,1.427,16,0.587,17,0.406,20,0.194,21,0.01,22,1.041,24,1.539,26,0.015,27,0.015,71,2.259,72,1.924,73,1.5,74,2.292,75,2.712,76,2.532,77,2.898,78,2.898,79,2.898,80,2.292,81,4.153,82,2.292,83,2.292,84,1.938,85,1.792,86,0.943,87,1.66,88,4.374,89,2.282,90,1.924,91,2.733,92,3.453,93,2.292,94,3.025,95,2.292,96,2.292,97,2.292,98,1.924,99,2.733,100,3.453,101,2.292,102,1.681,103,1.681,104,3.453,105,1.924,106,3.453,107,2.237,108,1.924,109,1.924,110,1.924,111,1.355,112,2.292,113,2.292,114,1.924,115,1.924,116,3.453,117,2.292,118,2.292,119,2.292,120,2.282,121,2.292,122,2.292,123,2.292,124,2.898,125,2.292,126,2.292,127,2.292,128,2.292,129,2.292,130,2.292,131,2.292,132,2.292,133,2.292,134,2.292,135,2.292,136,2.292,137,2.292,138,2.292]],["title/classes/AuthGuard.html",[21,0.014,111,1.931]],["body/classes/AuthGuard.html",[3,0.471,4,0.253,5,0.253,7,0.51,8,1.425,11,0.029,12,0.967,14,1.425,16,0.501,17,0.611,20,0.292,21,0.015,24,1.537,26,0.02,27,0.02,65,0.846,84,1.936,85,1.791,86,0.783,87,1.658,111,3.079,139,1.445,140,2.894,141,4.618,142,4.618,143,4.618,144,5.562,145,3.448,146,3.448,147,4.618,148,3.795,149,3.448,150,5.208,151,4.618,152,3.448,153,2.256,154,2.256,155,3.448,156,3.448,157,2.529,158,2.038]],["title/modules/AuthModule.html",[28,1.008,40,1.931]],["body/modules/AuthModule.html",[2,1.515,3,0.256,4,0.222,5,0.222,11,0.029,16,0.652,17,0.535,20,0.256,21,0.013,26,0.019,27,0.019,28,1.501,30,1.267,31,1.267,32,1.491,33,1.491,34,1.267,35,2.4,36,1.491,40,3.653,42,2.605,45,2.083,46,1.491,47,1.491,49,2.761,71,3.181,107,3.089,108,2.536,148,1.977,153,1.977,159,2.536,160,2.536,161,3.021,162,3.391,163,3.021,164,3.021,165,2.216,166,3.021,167,3.021,168,2.216,169,1.786,170,2.216,171,3.021,172,3.021,173,3.021,174,1.977,175,3.021,176,3.021,177,2.536,178,3.021,179,2.216,180,2.216,181,3.021,182,2.536,183,2.536]],["title/injectables/AuthService.html",[65,0.802,107,1.76]],["body/injectables/AuthService.html",[3,0.119,4,0.103,5,0.103,7,0.207,8,0.72,11,0.03,12,0.879,14,1.494,16,0.483,17,0.248,20,0.119,21,0.006,22,0.636,24,1.293,26,0.01,27,0.01,65,0.572,66,0.636,75,2.382,76,3.664,77,3.261,78,1.957,79,3.261,84,1.759,85,1.808,86,0.952,87,1.507,89,1.726,90,1.957,91,2.068,94,3.051,98,1.957,99,2.068,107,1.256,109,1.174,110,1.174,120,2.301,148,2.912,157,2.85,158,2.631,168,1.026,169,0.827,170,1.026,174,1.526,179,1.026,180,1.026,182,1.174,183,1.174,184,1.174,185,2.332,186,2.332,187,0.916,188,1.026,189,1.589,190,4.451,191,1.399,192,1.71,193,2.332,194,1.399,195,2.332,196,2.332,197,1.957,198,1.399,199,2.332,200,2.26,201,1.399,202,2.332,203,4.451,204,1.399,205,2.332,206,1.399,207,2.998,208,2.332,209,1.399,210,2.332,211,1.399,212,1.174,213,1.026,214,1.174,215,2.481,216,3.051,217,4.197,218,3.497,219,1.884,220,2.332,221,2.998,222,1.399,223,1.399,224,1.399,225,2.332,226,1.399,227,1.399,228,2.332,229,1.399,230,2.565,231,2.199,232,1.962,233,1.399,234,2.332,235,2.332,236,2.332,237,1.399,238,2.998,239,1.399,240,1.399,241,1.399,242,1.399,243,1.399,244,1.957,245,1.026,246,1.399,247,1.399,248,2.332,249,2.068,250,1.174,251,3.261,252,0.827,253,1.399,254,1.399,255,2.332,256,1.399,257,1.399,258,1.174,259,1.399,260,1.399]],["title/classes/CreateSchoolDto.html",[21,0.014,261,1.76]],["body/classes/CreateSchoolDto.html",[3,0.283,4,0.246,5,0.246,7,0.494,10,2.129,11,0.029,12,1.15,15,2.385,16,0.362,20,0.283,21,0.019,26,0.02,27,0.02,86,1.246,87,2.124,139,1.4,219,2.76,261,2.435,262,4.815,263,2.45,264,2.053,265,5.124,266,5.124,267,5.124,268,4.521,269,3.34,270,3.34,271,3.34,272,3.34,273,3.34,274,3.34,275,3.315,276,2.958,277,4.608,278,3.392,279,1.799]],["title/classes/CreateTaskDto.html",[21,0.014,280,1.931]],["body/classes/CreateTaskDto.html",[3,0.319,4,0.277,5,0.277,7,0.557,10,1.898,11,0.029,12,1.139,15,2.233,16,0.409,20,0.319,21,0.021,26,0.022,27,0.022,86,1.235,139,1.579,200,2.637,264,2.224,276,3.559,278,3.216,279,2.029,280,2.894,281,4.833,282,2.763,283,3.989,284,3.216,285,3.216,286,3.161,287,4.109,288,3.161,289,3.161]],["title/injectables/JwtStrategy.html",[65,0.802,162,1.931]],["body/injectables/JwtStrategy.html",[3,0.292,4,0.253,5,0.253,7,0.51,8,1.425,11,0.029,12,0.967,14,1.064,16,0.604,17,0.611,20,0.292,21,0.015,24,1.148,26,0.02,27,0.02,65,1.134,66,1.566,75,2.365,84,1.445,85,1.337,86,0.783,87,1.238,89,1.702,153,2.256,154,2.256,162,2.73,169,2.038,170,2.529,174,2.256,177,2.894,180,2.529,187,3.407,197,2.894,219,1.857,249,2.038,290,2.894,291,4.618,292,3.448,293,4.618,294,3.448,295,3.448,296,3.448,297,3.448,298,2.894,299,3.448,300,3.448,301,3.448,302,3.448,303,3.448,304,3.448,305,3.448,306,3.448,307,2.894,308,3.448]],["title/controllers/LatihanController.html",[0,1.173,309,2.138]],["body/controllers/LatihanController.html",[0,1.469,2,1.469,3,0.347,4,0.301,5,0.301,7,0.605,8,1.593,10,1.586,11,0.029,12,0.857,14,1.263,16,0.56,17,0.725,20,0.347,21,0.018,22,1.858,24,1.362,26,0.023,27,0.023,73,2.677,309,3.378,310,3.434,311,3.434,312,4.985,313,4.091,314,3.046,315,3.434,316,4.091,317,4.091]],["title/modules/LatihanModule.html",[28,1.008,41,1.931]],["body/modules/LatihanModule.html",[2,1.789,3,0.328,4,0.284,5,0.284,11,0.029,16,0.598,17,0.686,20,0.328,21,0.017,26,0.022,27,0.022,28,1.7,30,1.622,31,1.622,32,1.91,33,1.91,34,1.622,35,2.719,36,1.91,41,3.643,45,2.459,46,1.91,47,1.91,309,3.605,314,3.319,315,3.247,318,3.247,319,3.247,320,3.869,321,3.869]],["title/injectables/LatihanService.html",[65,0.802,314,1.76]],["body/injectables/LatihanService.html",[3,0.355,4,0.308,5,0.308,7,0.62,8,1.618,11,0.029,12,0.878,14,1.294,15,1.625,16,0.455,17,0.743,20,0.355,21,0.018,24,1.395,26,0.023,27,0.023,65,1.287,66,1.904,232,3.429,311,3.518,312,5.028,314,2.823,322,3.518,323,4.192]],["title/classes/LoginDto.html",[21,0.014,91,1.931]],["body/classes/LoginDto.html",[3,0.331,4,0.287,5,0.287,7,0.577,10,1.943,11,0.029,12,1.05,15,2.263,16,0.424,20,0.331,21,0.021,26,0.022,27,0.022,86,1.137,91,2.962,139,1.637,219,2.98,245,4.058,264,2.276,275,3.675,276,3.621,278,2.962,279,2.103,324,3.277,325,3.277,326,3.905,327,3.277,328,3.905,329,3.277,330,3.277,331,3.277,332,3.277]],["title/modules/PrismaModule.html",[28,1.008,42,1.484]],["body/modules/PrismaModule.html",[3,0.325,4,0.282,5,0.282,11,0.028,16,0.537,17,0.679,20,0.325,21,0.016,26,0.022,27,0.022,28,1.693,30,1.607,31,1.607,32,1.893,33,1.893,34,1.607,35,2.708,36,2.445,42,2.841,45,2.445,46,1.893,47,1.893,189,2.954,333,3.218,334,3.218,335,3.218,336,3.835,337,3.835,338,3.835,339,3.835]],["title/injectables/PrismaService.html",[65,0.802,189,1.484]],["body/injectables/PrismaService.html",[3,0.298,4,0.259,5,0.259,7,0.52,8,1.445,11,0.029,12,0.981,14,1.445,16,0.508,17,0.623,20,0.298,21,0.015,26,0.021,27,0.021,65,1.149,66,1.598,75,2.783,84,1.475,85,1.364,86,0.799,87,1.264,120,2.311,154,3.063,189,2.126,340,2.953,341,5.261,342,4.682,343,6.004,344,4.682,345,5.608,346,3.519,347,2.953,348,3.519,349,2.953,350,3.519,351,3.519,352,3.519,353,3.519]],["title/classes/RegisterDto.html",[21,0.014,99,1.931]],["body/classes/RegisterDto.html",[3,0.311,4,0.27,5,0.27,7,0.543,10,2.082,11,0.029,12,1.125,15,2.355,16,0.398,20,0.311,21,0.021,26,0.021,27,0.021,85,2.082,86,1.219,99,2.846,139,1.538,219,2.893,245,3.939,264,2.186,275,3.53,276,3.731,278,3.175,279,1.977,287,3.08,325,3.08,327,3.08,329,3.08,330,3.08,331,3.08,332,3.08,354,3.08,355,3.67,356,3.67,357,3.67]],["title/classes/School.html",[21,0.014,358,1.931]],["body/classes/School.html",[3,0.414,4,0.359,5,0.359,11,0.027,20,0.414,21,0.021,26,0.025,27,0.025,139,2.048,358,3.401,359,4.101]],["title/controllers/SchoolController.html",[0,1.173,360,2.138]],["body/controllers/SchoolController.html",[0,0.841,2,0.841,3,0.199,4,0.172,5,0.172,7,0.346,8,1.083,10,1.941,11,0.029,12,1.048,14,1.545,15,2.221,16,0.507,17,0.415,20,0.199,21,0.01,22,1.064,23,1.966,24,1.666,26,0.015,27,0.015,73,1.533,75,2.805,84,1.959,85,1.812,86,1.061,87,1.678,89,2.47,102,2.574,103,3.086,120,2.47,215,1.385,249,3.106,261,2.83,358,1.385,360,2.296,361,1.966,362,2.296,363,3.922,364,2.945,365,2.945,366,2.574,367,1.966,368,2.343,369,2.343,370,1.966,371,3.509,372,2.343,373,1.966,374,3.509,375,2.343,376,1.966,377,3.312,378,3.509,379,2.343,380,1.966,381,1.533,382,2.266,383,1.966,384,1.533,385,2.574,386,1.533,387,2.343,388,2.343,389,2.343,390,2.343,391,2.343,392,2.343,393,2.343,394,2.343,395,2.343,396,2.343]],["title/modules/SchoolModule.html",[28,1.008,43,1.931]],["body/modules/SchoolModule.html",[2,1.709,3,0.306,4,0.265,5,0.265,11,0.029,16,0.615,17,0.639,20,0.306,21,0.015,26,0.021,27,0.021,28,1.644,30,1.512,31,1.512,32,1.781,33,1.781,34,1.512,35,2.629,36,1.781,42,2.746,43,3.7,45,2.349,46,1.781,47,1.781,49,3.114,165,2.646,360,3.485,382,3.257,383,3.028,397,3.028,398,3.608,399,3.028,400,3.608,401,3.608]],["title/injectables/SchoolService.html",[65,0.802,382,1.76]],["body/injectables/SchoolService.html",[3,0.152,4,0.132,5,0.132,7,0.265,8,0.881,11,0.03,12,0.987,14,1.673,16,0.44,17,0.318,20,0.152,21,0.008,22,0.814,24,1.473,26,0.013,27,0.013,65,0.7,66,0.814,75,2.661,84,1.855,85,1.716,86,1.004,87,1.589,89,2.184,94,3.546,120,2.184,158,1.687,187,1.173,188,1.315,189,1.841,192,2.093,200,2.848,213,1.315,215,2.616,216,2.895,230,2.972,231,2.972,232,1.173,244,1.504,249,3.271,261,2.663,358,3.204,362,2.652,363,3.401,364,2.395,365,2.395,366,2.972,367,2.395,370,2.395,373,2.395,376,2.395,377,3.126,381,1.867,382,1.537,384,1.173,385,2.093,386,1.173,402,1.504,403,1.793,404,1.793,405,1.793,406,1.793,407,1.793,408,1.793,409,2.853,410,1.793,411,1.793,412,1.793,413,4.053,414,1.793,415,1.793,416,2.853,417,1.793,418,1.793,419,2.853,420,1.793,421,1.793,422,1.793,423,1.793]],["title/interfaces/Task.html",[424,2.138,425,1.76]],["body/interfaces/Task.html",[3,0.308,4,0.267,5,0.267,7,0.538,11,0.029,15,2.35,20,0.406,26,0.021,27,0.021,86,1.214,200,2.881,216,2.381,252,2.151,264,2.174,284,3.583,285,3.583,424,2.381,425,3.328,426,3.639,427,2.669,428,3.966,429,3.923,430,3.132,431,4.489]],["title/controllers/TaskController.html",[0,1.173,432,2.138]],["body/controllers/TaskController.html",[0,0.843,2,0.843,3,0.199,4,0.173,5,0.173,7,0.347,8,1.085,10,1.943,11,0.029,12,1.05,14,1.547,16,0.544,17,0.416,20,0.199,21,0.01,22,1.067,24,1.668,26,0.015,27,0.015,73,1.537,75,2.806,84,1.962,85,1.814,86,0.798,87,1.68,89,2.473,102,4.112,103,2.579,105,1.971,111,1.389,120,2.473,124,4.206,215,1.389,280,2.766,380,1.971,381,1.537,384,1.537,386,1.537,425,1.265,428,3.441,432,2.301,433,1.971,434,2.951,435,2.951,436,3.927,437,2.951,438,2.951,439,2.349,440,2.349,441,2.349,442,1.971,443,2.349,444,2.349,445,2.349,446,2.349,447,1.971,448,2.349,449,2.349,450,1.971,451,2.766,452,2.349,453,2.349,454,2.349,455,2.349,456,2.27,457,1.971,458,2.951,459,2.349,460,2.349,461,3.517,462,2.349,463,2.349,464,2.349,465,2.349,466,2.349,467,2.349,468,2.349,469,2.349,470,2.349,471,2.349,472,2.349,473,2.349]],["title/modules/TaskModule.html",[28,1.008,44,1.931]],["body/modules/TaskModule.html",[2,1.714,3,0.307,4,0.266,5,0.266,11,0.029,16,0.616,17,0.642,20,0.307,21,0.016,26,0.021,27,0.021,28,1.647,30,1.519,31,1.519,32,1.788,33,1.788,34,1.519,35,2.635,36,1.788,42,2.678,44,3.703,45,2.356,46,1.788,47,1.788,49,2.371,165,2.657,432,3.492,456,3.261,457,3.041,474,3.041,475,3.041,476,3.623,477,3.623,478,3.623,479,3.623]],["title/injectables/TaskService.html",[65,0.802,456,1.76]],["body/injectables/TaskService.html",[3,0.134,4,0.117,5,0.117,7,0.235,8,0.798,11,0.03,12,0.934,14,1.609,16,0.51,17,0.458,20,0.134,21,0.007,22,0.721,24,1.384,26,0.011,27,0.011,65,0.635,66,0.721,75,2.588,76,1.163,84,1.743,85,1.729,86,0.944,87,1.493,88,2.747,89,2.052,94,3.772,120,2.052,148,1.038,157,1.163,158,1.935,187,1.038,188,1.163,189,1.715,192,1.897,200,2.732,213,1.163,214,1.331,215,2.458,216,2.721,219,0.854,230,3.049,231,3.049,232,1.038,249,3.083,250,1.331,251,3.169,252,0.938,258,1.331,280,2.232,283,1.897,284,1.529,285,0.938,362,1.692,366,1.897,381,2.142,384,1.038,386,1.038,425,2.809,428,3.318,434,2.17,435,2.17,436,3.169,437,2.17,438,2.17,442,2.17,447,2.17,450,2.17,451,2.232,456,1.393,458,2.17,480,1.331,481,1.586,482,2.586,483,1.586,484,1.586,485,1.586,486,1.586,487,1.586,488,1.586,489,1.331,490,1.586,491,1.586,492,1.586,493,1.586,494,1.586,495,1.586,496,1.586,497,1.586,498,2.586,499,3.775,500,2.586,501,1.586,502,3.775,503,1.586,504,1.586,505,1.586,506,2.586,507,1.586,508,2.586,509,1.586,510,1.586]],["title/classes/UpdateSchoolDto.html",[21,0.014,377,1.931]],["body/classes/UpdateSchoolDto.html",[3,0.381,4,0.331,5,0.331,11,0.029,16,0.594,20,0.381,21,0.019,26,0.024,27,0.024,139,1.887,154,2.945,261,2.424,263,3.301,362,2.945,377,3.237,385,3.301,511,3.777,512,4.501,513,3.777,514,3.777,515,4.501]],["title/classes/UpdateTaskDto.html",[21,0.014,451,1.931]],["body/classes/UpdateTaskDto.html",[3,0.314,4,0.272,5,0.272,7,0.547,10,1.877,11,0.028,12,1.13,15,2.218,16,0.402,20,0.314,21,0.021,26,0.021,27,0.021,86,1.224,87,2.054,139,1.552,200,2.607,264,2.199,277,4.527,278,3.189,279,1.994,282,2.715,283,3.956,284,3.189,285,3.189,286,3.107,288,3.107,289,3.107,451,2.862,516,4.801,517,4.841]],["title/coverage.html",[518,3.266]],["body/coverage.html",[0,1.893,1,1.738,5,0.195,6,2.229,11,0.029,18,1.43,21,0.025,26,0.017,27,0.017,34,1.113,65,1.392,67,2.229,71,1.738,72,2.229,86,0.603,91,1.57,99,1.57,107,1.43,111,1.57,140,2.229,158,1.57,162,1.57,169,1.57,184,2.229,189,1.206,252,1.57,261,1.43,262,2.229,263,2.823,280,1.57,281,2.229,282,2.823,290,2.229,309,1.738,310,2.229,314,1.43,322,2.229,324,2.229,340,2.229,354,2.229,358,1.57,359,2.229,360,1.738,361,2.229,377,1.57,382,1.43,402,2.229,424,1.738,425,1.43,427,2.823,432,1.738,433,2.229,451,1.57,456,1.43,480,2.229,511,2.229,516,2.229,518,1.948,519,2.655,520,2.655,521,2.655,522,6.487,523,4.965,524,3.849,525,4.965,526,4.527,527,4.527,528,4.965,529,2.229,530,3.849,531,5.27,532,2.229,533,2.655,534,3.849,535,2.655,536,2.655]],["title/dependencies.html",[31,1.647,537,2.292]],["body/dependencies.html",[11,0.029,17,0.695,21,0.022,26,0.022,27,0.022,31,1.644,56,3.292,57,3.292,114,3.292,115,3.292,153,2.567,168,2.877,174,2.567,212,3.292,279,2.113,298,4.218,349,3.292,489,3.292,513,3.292,514,3.292,538,5.545,539,3.922,540,3.922,541,3.922,542,3.922,543,3.922,544,3.922,545,3.922,546,3.922,547,3.922,548,3.922,549,3.922,550,3.922,551,3.922,552,3.922,553,3.922]],["title/miscellaneous/functions.html",[554,1.787,555,3.297]],["body/miscellaneous/functions.html",[7,0.731,11,0.025,26,0.025,27,0.025,34,2.575,532,4.148,554,3.234,555,4.148,556,4.943]],["title/index.html",[7,0.404,557,2.731,558,2.731]],["body/index.html",[4,0.245,11,0.029,26,0.02,27,0.02,58,2.792,347,2.792,430,2.177,518,2.44,559,3.327,560,3.327,561,4.509,562,3.327,563,3.327,564,3.327,565,3.327,566,3.327,567,3.327,568,5.114,569,3.327,570,3.327,571,3.327,572,3.327,573,6.041,574,3.327,575,3.327,576,5.907,577,3.327,578,3.327,579,4.509,580,3.327,581,3.327,582,3.327,583,3.327,584,4.509,585,4.509,586,3.327,587,3.327,588,3.327,589,4.509,590,4.509,591,3.327,592,3.327,593,3.327,594,3.327,595,3.327,596,2.792,597,3.327,598,3.327,599,3.327,600,3.327,601,3.327,602,3.327,603,3.327,604,3.327,605,3.327,606,2.792,607,3.327,608,3.327,609,3.327,610,3.327,611,3.327,612,3.327,613,2.792]],["title/modules.html",[30,1.867]],["body/modules.html",[11,0.024,26,0.024,27,0.024,29,2.855,30,1.829,40,2.579,41,2.579,42,1.982,43,2.579,44,2.579,596,5.332,614,6.354,615,6.354,616,6.354]],["title/overview.html",[617,3.738]],["body/overview.html",[2,1.048,11,0.029,18,2.57,26,0.018,27,0.018,28,0.901,29,4.16,30,1.223,31,1.223,32,1.44,33,1.44,34,1.223,35,1.44,36,1.44,37,2.449,38,2.449,39,2.449,40,3.578,41,3.231,42,2.749,43,3.446,44,3.446,45,2.032,46,1.44,47,1.44,66,1.325,107,2.57,139,1.223,159,2.449,160,2.449,162,2.821,189,2.648,314,2.57,318,2.449,319,2.449,333,2.449,334,2.449,335,2.449,382,2.57,397,2.449,399,2.449,424,1.91,429,2.14,456,2.57,474,2.449,475,2.449,617,2.449,618,2.918,619,2.918,620,2.918,621,2.918]],["title/properties.html",[264,1.784,537,2.292]],["body/properties.html",[11,0.029,26,0.025,27,0.025,264,2.207,430,3.179,606,4.078,613,4.078,622,4.859,623,4.859,624,4.859]],["title/miscellaneous/variables.html",[554,1.787,625,3.297]],["body/miscellaneous/variables.html",[7,0.58,11,0.029,26,0.022,27,0.022,86,1.141,169,2.971,179,2.877,252,2.971,284,2.971,285,2.971,307,3.292,425,3.256,427,2.877,428,3.288,429,4.067,430,3.288,431,4.654,529,3.292,554,2.567,625,3.292,626,3.922,627,3.922,628,3.922,629,5.026,630,5.026,631,3.922,632,3.922]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":623,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":429,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.3",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":431,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["3600",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["4.14.1",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":619,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":618,"title":{},"body":{"overview.html":{}}}],["7",{"_index":620,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":621,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["accesstoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":265,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["already",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":597,"title":{},"body":{"index.html":{}}}],["app",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":567,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":111,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":152,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":155,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":606,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":107,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":598,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":616,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":614,"title":{},"body":{"modules.html":{}}}],["building",{"_index":562,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":141,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":143,"title":{},"body":{"classes/AuthGuard.html":{}}}],["cb",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":139,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":318,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":319,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":333,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":334,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":335,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":397,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":398,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":399,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":474,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":476,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":475,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["context",{"_index":146,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('latihan",{"_index":316,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('school",{"_index":387,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":518,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":362,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":367,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createdata",{"_index":500,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschool",{"_index":409,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":261,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":434,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":462,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":439,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":482,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":280,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":498,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.task_description",{"_index":495,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.task_name",{"_index":494,"title":{},"body":{"injectables/TaskService.html":{}}}],["data/tasks",{"_index":488,"title":{},"body":{"injectables/TaskService.html":{}}}],["dataschool",{"_index":413,"title":{},"body":{"injectables/SchoolService.html":{}}}],["datatask",{"_index":502,"title":{},"body":{"injectables/TaskService.html":{}}}],["datauser",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete('/:task_id",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":374,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleteschool",{"_index":419,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletetask",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":435,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":442,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":430,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["detail",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":575,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/logindto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/registerdto",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":586,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":563,"title":{},"body":{"index.html":{}}}],["email",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ensure",{"_index":492,"title":{},"body":{"injectables/TaskService.html":{}}}],["err",{"_index":150,"title":{},"body":{"classes/AuthGuard.html":{}}}],["error('task_name",{"_index":496,"title":{},"body":{"injectables/TaskService.html":{}}}],["executioncontext",{"_index":144,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["exports:[prismaservice",{"_index":339,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":154,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.originalname",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":363,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":364,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":370,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["found",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":561,"title":{},"body":{"index.html":{}}}],["function",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":555,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":371,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('profile",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltask",{"_index":436,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":312,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["gettaskbyid",{"_index":437,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":557,"title":{"index.html":{}},"body":{}}],["global",{"_index":337,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grow",{"_index":593,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":142,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":147,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hapus",{"_index":422,"title":{},"body":{"injectables/SchoolService.html":{}}}],["hash",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":603,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('bad",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":610,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":283,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["if(createschool",{"_index":411,"title":{},"body":{"injectables/SchoolService.html":{}}}],["if(datauser",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(deleteschool",{"_index":421,"title":{},"body":{"injectables/SchoolService.html":{}}}],["if(updateschool",{"_index":418,"title":{},"body":{"injectables/SchoolService.html":{}}}],["ignoreexpiration",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["imports:[prismamodule",{"_index":479,"title":{},"body":{"modules/TaskModule.html":{}}}],["include",{"_index":504,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":490,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":491,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":65,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":572,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":574,"title":{},"body":{"index.html":{}}}],["interface",{"_index":424,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":426,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":275,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":276,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isemail",{"_index":325,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":287,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":327,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isoptional",{"_index":277,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":517,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":278,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":273,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":268,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":270,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["join",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":162,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":607,"title":{},"body":{"index.html":{}}}],["latihan",{"_index":311,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":321,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":315,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":309,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":41,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":314,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":613,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":590,"title":{},"body":{"index.html":{}}}],["login",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":91,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["match",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":330,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":332,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LatihanService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":329,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":554,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":589,"title":{},"body":{"index.html":{}}}],["mode",{"_index":579,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":602,"title":{},"body":{"index.html":{}}}],["multer",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":608,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":568,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":612,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":489,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":513,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":153,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":158,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["node.js",{"_index":560,"title":{},"body":{"index.html":{}}}],["number",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":591,"title":{},"body":{"index.html":{}}}],["optional",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":617,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovissmwktl2sqp9v/eftkff4jdfzig1jtw9onmr1kulqqqlev9rwtauaoipcgqfs",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":537,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":512,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":515,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy,'jwt",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":266,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":600,"title":{},"body":{"index.html":{}}}],["post",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":338,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":42,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":189,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["production",{"_index":581,"title":{},"body":{"index.html":{}}}],["profile",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":559,"title":{},"body":{"index.html":{}}}],["project",{"_index":592,"title":{},"body":{"index.html":{}}}],["properties",{"_index":264,"title":{"properties.html":{}},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["provided",{"_index":493,"title":{},"body":{"injectables/TaskService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":601,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":99,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":365,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":373,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":571,"title":{},"body":{"index.html":{}}}],["req",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["required",{"_index":497,"title":{},"body":{"injectables/TaskService.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":576,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":564,"title":{},"body":{"index.html":{}}}],["school",{"_index":358,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["school.controller",{"_index":401,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":263,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:12",{"_index":271,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:16",{"_index":269,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:20",{"_index":272,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:7",{"_index":274,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":267,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":360,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":43,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":382,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sekolah",{"_index":423,"title":{},"body":{"injectables/SchoolService.html":{}}}],["select",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":565,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":566,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":595,"title":{},"body":{"index.html":{}}}],["src/.../jwt_config.ts",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.ts",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":140,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:10",{"_index":145,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:14",{"_index":149,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:111",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:141",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/logindto.ts",{"_index":324,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/logindto.ts:13",{"_index":328,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/logindto.ts:7",{"_index":326,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/registerdto.ts",{"_index":354,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/registerdto.ts:11",{"_index":355,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:17",{"_index":357,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:7",{"_index":356,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":290,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:18",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":310,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:9",{"_index":313,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":320,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":322,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:6",{"_index":323,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":336,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":340,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":262,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":511,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":359,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":361,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:11",{"_index":368,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:16",{"_index":369,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:21",{"_index":372,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:26",{"_index":379,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:31",{"_index":375,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":400,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":402,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:15",{"_index":404,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:31",{"_index":405,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:44",{"_index":406,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:63",{"_index":408,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":403,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:83",{"_index":407,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/tasks.ts",{"_index":427,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":281,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":516,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":433,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:15",{"_index":441,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:21",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:27",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:34",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:40",{"_index":444,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":477,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":480,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:10",{"_index":481,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:104",{"_index":484,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:18",{"_index":483,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:39",{"_index":485,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:66",{"_index":486,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:85",{"_index":487,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":577,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":580,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":582,"title":{},"body":{"index.html":{}}}],["started",{"_index":558,"title":{"index.html":{}},"body":{}}],["starter",{"_index":570,"title":{},"body":{"index.html":{}}}],["statements",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["statuscode:200",{"_index":412,"title":{},"body":{"injectables/SchoolService.html":{}}}],["stay",{"_index":604,"title":{},"body":{"index.html":{}}}],["storage",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfull",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["sukses",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["super",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":156,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":596,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":615,"title":{},"body":{"modules.html":{}}}],["table",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":425,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":478,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":282,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:13",{"_index":288,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:5",{"_index":286,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":289,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":284,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":428,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":285,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":432,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":44,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":456,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":585,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":588,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":587,"title":{},"body":{"index.html":{}}}],["tests",{"_index":584,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":594,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.id",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.id,'/uploads/image/'+file.filename",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":317,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.schools.create",{"_index":410,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":420,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":415,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":414,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":417,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":501,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":505,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":503,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":499,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":392,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":157,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["token",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":605,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":611,"title":{},"body":{"index.html":{}}}],["type",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":514,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":569,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":151,"title":{},"body":{"classes/AuthGuard.html":{}}}],["unit",{"_index":583,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":624,"title":{},"body":{"properties.html":{}}}],["update",{"_index":366,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["update(@param('id",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateschool",{"_index":416,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":377,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetask",{"_index":506,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskbyid",{"_index":438,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":451,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":443,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":445,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":448,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@patch('/:task_id",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@post",{"_index":440,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":148,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["user_id",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{}}}],["validator",{"_index":279,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":625,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":622,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":578,"title":{},"body":{"index.html":{}}}],["website",{"_index":609,"title":{},"body":{"index.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":573,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":599,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [ServeStaticModule.forRoot({\n    rootPath: join(__dirname, '..', 'public'),\n  }),\n  LatihanModule, \n  TaskModule, \n  PrismaModule, \n  AuthModule, SchoolModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UploadedFile, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/RegisterDto';\nimport { LoginDto } from './dto/LoginDto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Req() req) {\n    return await this.authService.profile(req.id);\n  }\n\n  @UseGuards(AuthGuard)\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(req.user.id,'/uploads/image/'+file.filename);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\n\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:141\n                \n            \n\n\n            \n                \n                    Generate JWT Token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Login user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:81\n                \n            \n\n\n            \n                \n                    User Detail\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n                    Register new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n                    Upload Avatar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { compare, hash } from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/RegisterDto';\nimport { LoginDto } from './dto/LoginDto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n@Injectable()\nexport class AuthService {\n    constructor(private prisma: PrismaService, private jwtService: JwtService) {}\n\n  /**\n   * Register new user\n   * @param data\n   * @returns\n   */\n  async register(data: RegisterDto) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (checkUserExists) {\n      throw new HttpException('User already registered', HttpStatus.FOUND);\n    }\n    data.password = await hash(data.password, 12);\n    const createUser = await this.prisma.users.create({\n      data: data,\n    });\n    if (createUser) {\n      return {\n        statusCode: 200,\n        message: 'Register Successfull',\n      };\n    }\n  }\n\n   /**\n   * Login user\n   * @param data\n   */\n   async login(data: LoginDto) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (!checkUserExists) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(\n      data.password,\n      checkUserExists.password,\n    );\n    if (checkPassword) {\n      const accessToken = this.generateJWT({\n        sub: checkUserExists.id,\n        name: checkUserExists.name,\n        email: checkUserExists.email,\n      });\n      return {\n        statusCode: 200,\n        message: 'Login berhasil',\n        accessToken: accessToken,\n      };\n    } else {\n      throw new HttpException(\n        'User or password not match',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  }\n\n  /**\n   * User Detail\n   * @param user_id \n   * @returns \n   */\n  async profile(user_id: number) {\n    const dataUser = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true\n      },\n    });\n\n    if(dataUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        data: dataUser,\n      };\n    }\n\n    throw new HttpException('User not Found', HttpStatus.NOT_FOUND);\n  }\n\n  /**\n   * Upload Avatar\n   * @param user_id \n   * @param avatar \n   * @returns \n   */\n  async uploadAvatar(user_id: number, avatar) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n    });\n    if (checkUserExists) {\n      const updateAvatar = await this.prisma.users.update({\n        data: {\n          avatar: avatar,\n        },\n        where: {\n          id: user_id,\n        },\n      });\n      if (updateAvatar) {\n        return {\n          statusCode: 200,\n          message: 'Upload avatar berhasil',\n        };\n      }\n    }\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n\n  /**\n   * Generate JWT Token\n   * @param payload\n   * @returns\n   */\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateSchoolDto {\n\n    @IsString()\n    @IsNotEmpty()\n    school_name: string;\n  \n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string;\n  \n    @IsString()\n    @IsOptional()\n    address?: string;\n  \n    @IsString()\n    @IsOptional()\n    phone?: string;\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from \"class-validator\";\n\nexport class CreateTaskDto {\n\n  id_user: number;\n\n  @IsNotEmpty()\n  @IsString()\n  task_name: string;\n  \n  @IsNotEmpty()\n  @IsString()\n  task_description: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy,'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      expired: payload.exp\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/latihan/latihan.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n\n    constructor(private latihanService: LatihanService){}\n    @Get()\n    getLatihan() {\n        return this.latihanService.getLatihan();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService]\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n            \n                \n                    Defined in src/latihan/latihan.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n\n    getLatihan() {\n        return {\n            message: \"Latihan\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/LoginDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/LoginDto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/LoginDto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsEmail, MinLength, MaxLength } from \"class-validator\";\n\nexport class LoginDto {\n  \n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports:[PrismaService]\n})\nexport class PrismaModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/RegisterDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class RegisterDto {\n\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSchoolDto\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSchoolDto\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService]\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:15\n                \n            \n\n\n            \n                \n                    Create a new school\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSchoolDto\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:31\n                \n            \n\n\n            \n                \n                    Get all data school\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:44\n                \n            \n\n\n            \n                \n                    Get school by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:83\n                \n            \n\n\n            \n                \n                    Delete school\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:63\n                \n            \n\n\n            \n                \n                    Update School\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSchoolDto\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService){}\n  \n  /**\n   * Create a new school\n   * @param createSchoolDto \n   * @returns \n   */\n  async create(createSchoolDto: CreateSchoolDto) {\n    const CreateSchool = await this.prisma.schools.create({\n      data: createSchoolDto\n    });\n    if(CreateSchool){\n      return{\n        statusCode:200,\n        data: CreateSchool\n      }\n    }\n  }\n\n  /**\n   * Get all data school\n   * @returns \n   */\n  async findAll() {\n    const dataSchool = await this.prisma.schools.findMany();\n    return {\n      statusCode: 200,\n      data: dataSchool\n    }\n  }\n\n  /**\n   * Get school by ID\n   * @param id \n   * @returns \n   */\n  async findOne(id: number) {\n    const dataSchool = await this.prisma.schools.findFirst({\n      where: {\n        id,\n      }\n    });\n    return {\n      statusCode: 200,\n      data: dataSchool\n    }\n  }\n\n\n  /**\n   * Update School\n   * @param id \n   * @param updateSchoolDto \n   * @returns \n   */\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    const updateSchool = await this.prisma.schools.update({\n      where: {\n        id\n      },\n      data: updateSchoolDto\n    })\n    if(updateSchool){\n      return {\n        statusCode: 200,\n        data: updateSchool\n      };\n    }\n  }\n\n  /**\n   * Delete school\n   * @param id \n   * @returns \n   */\n  async remove(id: number) {\n    const deleteSchool = await this.prisma.schools.delete({\n      where: {\n        id\n      }\n    });\n    if(deleteSchool){\n      return {\n        statusCode: 200,\n        data: deleteSchool,\n        message: 'Berhasil hapus data sekolah'\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/tasks.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task{\n    task_id: number;\n    task_name: string;\n    task_description: string;\n}\n\nexport const tasks : Task[] = [\n    {\n        task_id: 1,\n        task_name: \"Task 1\",\n        task_description: \"Task 1 description\"\n    },\n    {\n        task_id: 2,\n        task_name: \"Task 2\",\n        task_description: \"Task 2 description\"\n    }\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Post()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Patch('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n\n    constructor(private taskService: TaskService){}\n\n    @UseGuards(AuthGuard)\n    @UsePipes(ValidationPipe)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto){\n        return await this.taskService.createTask(body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Get()\n    async getAllTask(){\n        return await this.taskService.getAllTask();\n    }\n    \n    @UseGuards(AuthGuard)\n    @Get('/:task_id')\n    async getTaskById(@Param('task_id') task_id){\n        return await this.taskService.getTaskById(+task_id);\n    }\n\n    @UseGuards(AuthGuard)\n    @UsePipes(ValidationPipe)\n    @Patch('/:task_id')\n    async updateTaskById(@Param('task_id') task_id, @Body() body : UpdateTaskDto){\n        return await this.taskService.updateTaskById(+task_id, body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Delete('/:task_id')\n    async deleteTaskById(@Param('task_id') task_id){\n        return await this.taskService.deleteTaskById(+task_id);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports:[PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService]\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:18\n                \n            \n\n\n            \n                \n                    Create new task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:104\n                \n            \n\n\n            \n                \n                    delete a task by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:39\n                \n            \n\n\n            \n                \n                    Get All task\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:66\n                \n            \n\n\n            \n                \n                    Get task by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:85\n                \n            \n\n\n            \n                \n                    update task by ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { tasks } from './data/tasks';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\nimport { Inject } from '@nestjs/common';\n\n@Injectable()\nexport class TaskService {\n  constructor(private prisma: PrismaService, @Inject(REQUEST) private req: any) {}\n\n  /**\n   * Create new task\n   * @param data \n   * @returns \n   */\n  async createTask(data: CreateTaskDto) {\n    // Ensure that task_name and task_description are provided\n    if (!data.task_name || !data.task_description) {\n      throw new Error('task_name and task_description are required');\n    }\n\n    data.id_user = this.req.user.id;\n    const createData = await this.prisma.tasks.create({\n      data: data,\n    });\n    \n    return {\n      statusCode: 200,\n      data: createData,\n    };\n  }\n\n  /**\n   * Get All task\n   * @returns \n   */\n  async getAllTask() {\n    const dataTask = await this.prisma.tasks.findMany({\n      where:{\n        id_user: this.req.user.id\n      },\n      include:{\n        user:{\n          select:{\n            id: true,\n            name: true,\n            avatar: true,\n            email: true\n          }\n        }\n      }\n    });\n    return {\n      statusCode: 200,\n      data: dataTask,\n    };\n  }\n\n  /**\n   * Get task by ID\n   * @param task_id \n   * @returns \n   */\n  async getTaskById(task_id: number) {\n    const dataTask = await this.prisma.tasks.findFirst({\n      where: {\n        id: task_id,\n        id_user: this.req.user.id\n      },\n    });\n    return {\n      statusCode: 200,\n      data: dataTask,\n    };\n  }\n\n  /**\n   * update task by ID\n   * @param task_id \n   * @param data \n   * @returns \n   */\n  async updateTaskById(task_id: number, data: UpdateTaskDto) {\n    data.id_user = this.req.user.id;\n    const updateTask = await this.prisma.tasks.update({\n      where: {\n        id: task_id,\n      },\n      data: data,\n    });\n    return {\n      statusCode: 200,\n      data: updateTask,\n    };\n  }\n\n  /**\n   * delete a task by ID\n   * @param task_id \n   * @returns \n   */\n  async deleteTaskById(task_id: number) {\n    const deleteTask = await this.prisma.tasks.delete({\n      where: {\n        id: task_id,\n      },\n    });\n    return {\n      statusCode: 200,\n      data: deleteTask,\n      message: 'Sukses delete data',\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\";\n\nexport class UpdateTaskDto {\n\n  id_user: number;\n\n  @IsOptional()\n  @IsString()\n  task_name?: string;\n  \n  @IsOptional()\n  @IsString()\n  task_description?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/auth/dto/LoginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/RegisterDto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                71 %\n                (5/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @prisma/client : ^4.14.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                        \n                            tasks   (src/.../tasks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'OVisSmwkTl2SqP9V/eFTKFF4JDfzig1JTW9oNmr1kulqQqlEV9rwtAUaOIPcgqfs',\n    expired: 3600\n  }\n                    \n                \n\n\n        \n    \n\n    src/task/data/tasks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        task_id: 1,\n        task_name: \"Task 1\",\n        task_description: \"Task 1 description\"\n    },\n    {\n        task_id: 2,\n        task_name: \"Task 2\",\n        task_description: \"Task 2 description\"\n    }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
